---

name: "Execute pytest on a Python source package."

################################################################################
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      has_i18n:
        description: 'Does the package support localisation and internationalisation?'
        type: boolean
        default: true
      languages:
        description: 'A list of languages, which will be supported, if has_i18n is true.'
        type: string
        default: '["de_DE.UTF-8", "en_US.UTF-8"]'
      test_python_versions:
        description: 'A list of Python versions, for which the package should be tested.'
        type: string
        default: '["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]'

################################################################################
jobs:

  ###########################
  define-test-matrix:
    name: Defining the Test matrix
    runs-on: ubuntu-latest
    env:
      LANGS: ${{ inputs.languages }}
      PYTHON_VERSIONS: ${{ inputs.test_python_versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Defining the Test-Matrix
        id: set-matrix
        shell: bash
        run: |
          echo "matrix={\"language\": ${LANGS}, \"python_version\": ${PYTHON_VERSIONS}}" >> ${GITHUB_OUTPUT}
          echo "Using Matrix: $( cat ${GITHUB_OUTPUT} )"

  ###########################
  test:
    name: Exec Python-${{ matrix.python_version }} tests on ${{ matrix.language }}
    runs-on: ubuntu-latest
    needs: define-test-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-test-matrix.outputs.matrix) }}
      max-parallel: 5
    container: python:${{ matrix.python_version }}
    env:
      LANG: ${{ matrix.language }}
      LANGUAGE: ${{ matrix.language }}
      LC_ALL: ${{ matrix.language }}
    steps:
      - name: "Checking out sources."
        uses: actions/checkout@v4
      - name: Show Environment
        shell: bash
        run: |
          echo "Bash enviroment:"
          env | sort
          echo -e "\nPython version:"
          python --version
      - name: Preparing the Debian container
        uses: fbrehm/prepare-debian-container@main
        with:
          manage_locales: ${{ github.event.inputs.has_i18n }}
          additional_locales: ${{ matrix.language }}
      - name: Installing PIP modules and linter tools
        uses: fbrehm/github-install-pip-modules@main
        with:
          install_pytest: true
      - name: Executing PyTest for Python ${{ matrix.python_version }} and language ${{ matrix.language }}
        shell: bash
        run: pytest --verbose

# vim: et tabstop=2 expandtab shiftwidth=2 softtabstop=2 list

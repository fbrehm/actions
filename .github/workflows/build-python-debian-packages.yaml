---

name: "Building Debian packages of a Python source package."

################################################################################
# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      debian_email:
        description: 'The mail address of the user, which will be used to update debian/chagelog.'
        type: string
        default: 'frank@brehm-online.com'
      debian_fullname:
        description: 'A human readable name of the user, which will be used to update debian/chagelog.'
        type: string
        default: 'Frank Brehm'
      has_i18n:
        description: 'Does the package support localisation and internationalisation?'
        type: boolean
        default: true
      languages:
        description: 'A list of languages, which will be supported, if has_i18n is true.'
        type: string
        default: '["de_DE.UTF-8", "en_US.UTF-8"]'
      additional_locales:
        description: 'A whitespace separated list of additional locales (except en_US.UTF-8)'
        type: string
        default: 'de_DE.UTF-8'
      latest_debian_version:
        description: 'The short name of the latest stable Debian version.'
        type: string
        default: 'bookworm'
      debian_versions:
        description: 'Whitespace separated list of Debian and Ubuntu version to build the package for.'
        type: string
        default: 'debian-bullseye debian-bookworm debian-trixie ubuntu-focal ubuntu-jammy ubuntu-noble'
      additional_debian_build_packages:
        description: "A withespace separated list of packages additional to the base build packages"
        type: string

################################################################################
env:
  DEBFULLNAME: ${{ inputs.debian_fullname }}
  DEBEMAIL: ${{ inputs.debian_email }}
  GIT_REF: ${{ github.ref }}
  GIT_REFNAME: ${{ github.ref_name }}
  GIT_REFTYPE: ${{ github.ref_type }}

################################################################################
jobs:

  ###########################
  define-debian-build-matrix:
    name: "Defining the Matrix for building Debian packages"
    runs-on: ubuntu-latest
    container: debian:${{ inputs.latest_debian_version }}
    env:
      DEBIAN_VERSIONS: ${{ inputs.debian_versions }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: "Update package lists"
        id: apt-update
        shell: bash
        run: |
          echo "Update all package lists."
          apt update --yes

      - name: "Install JQ"
        shell: bash
        run: |
          apt install --yes jq
          echo -e "\nVersion of JQ: $( jq --version )"

      - name: "Defining the build-matrix"
        id: set-matrix
        shell: bash
        run: |
          if [[ -z "${DEBIAN_VERSIONS}" ]] ; then
            echo "::error::No Debian or Ubuntu versions given for building packages."
            exit 5
          fi
          matrix_json='{"include": ['
          first_distro='y'

          for deb_version in ${DEBIAN_VERSIONS}; do
            deb_version_lc=$( echo "${deb_version}" | tr '[:upper:]' '[:lower:]' )
            echo "::debug::Performing Debian version '${deb_version}' -> '${deb_version_lc}'"
            case "${deb_version_lc}" in
              debian-bullseye)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Debian 11 Bullseye\", "
                matrix_json+="\"distributor\": \"Debian\", "
                matrix_json+="\"os_codename\": \"bullseye\", "
                matrix_json+="\"os_release\": \"11\", "
                matrix_json+="\"container\": \"debian:bullseye\", "
                matrix_json+="\"version_prefix\": \"deb11\", "
                matrix_json+="\"compat\": \"12\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Debian 11 Bullseye"
                ;;
              debian-bookworm)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Debian 12 Bookworm\", "
                matrix_json+="\"distributor\": \"Debian\", "
                matrix_json+="\"os_codename\": \"bookworm\", "
                matrix_json+="\"os_release\": \"12\", "
                matrix_json+="\"container\": \"debian:bookworm\", "
                matrix_json+="\"version_prefix\": \"deb12\", "
                matrix_json+="\"compat\": \"12\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Debian 12 Bookworm"
                ;;
              debian-trixie)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Debian 13 Trixie\", "
                matrix_json+="\"distributor\": \"Debian\", "
                matrix_json+="\"os_codename\": \"trixie\", "
                matrix_json+="\"os_release\": \"13\", "
                matrix_json+="\"container\": \"debian:trixie\", "
                matrix_json+="\"version_prefix\": \"deb13\", "
                matrix_json+="\"compat\": \"13\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Debian 13 Trixie"
                ;;
              ubuntu-focal)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Ubuntu 20.04 Focal Fossa\", "
                matrix_json+="\"distributor\": \"Ubuntu\", "
                matrix_json+="\"os_codename\": \"focal\", "
                matrix_json+="\"os_release\": \"20.04\", "
                matrix_json+="\"container\": \"ubuntu:focal\", "
                matrix_json+="\"version_prefix\": \"ubuntu20.04\", "
                matrix_json+="\"compat\": \"12\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Ubuntu 20.04 Focal Fossa"
                ;;
              ubuntu-jammy)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Ubuntu 22.04 Jammy Jellyfish\", "
                matrix_json+="\"distributor\": \"Ubuntu\", "
                matrix_json+="\"os_codename\": \"jammy\", "
                matrix_json+="\"os_release\": \"22.04\", "
                matrix_json+="\"container\": \"ubuntu:jammy\", "
                matrix_json+="\"version_prefix\": \"ubuntu22.04\", "
                matrix_json+="\"compat\": \"12\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Ubuntu 22.04 Jammy Jellyfish"
                ;;
              ubuntu-noble)
                if [[ "${first_distro}" != 'y' ]] ; then
                  matrix_json+=", "
                fi
                matrix_json+="{"
                matrix_json+="\"title\": \"Ubuntu 22.04 Noble Numbat\", "
                matrix_json+="\"distributor\": \"Ubuntu\", "
                matrix_json+="\"os_codename\": \"noble\", "
                matrix_json+="\"os_release\": \"24.04\", "
                matrix_json+="\"container\": \"ubuntu:noble\", "
                matrix_json+="\"version_prefix\": \"ubuntu24.04\", "
                matrix_json+="\"compat\": \"12\""
                matrix_json+="}"
                echo "::notice title=Define Debian build matrix::Adding Ubuntu 24.04 Noble Numbat"
                ;;
              *)
                echo "::error title=Define Debian build matrix::Unknown Debian or Ubuntu version '${deb_version}' given." >&2
                exit 6
                ;;
            esac
            first_distro='n'
          done

          matrix_json+="]}"

          echo -e "\nGenerated JSON:"
          echo "${matrix_json}" | jq -C .

          echo "matrix=${matrix_json}" >> ${GITHUB_OUTPUT}
          echo "::debug::Using Matrix: $( cat ${GITHUB_OUTPUT} )"

  ###########################
  build_debian_sources:
    runs-on: ubuntu-latest
    name: "Building Debian Source Packages"
    if: ${{ github.ref_name == 'main' || github.ref_name == 'master' || startsWith(github.ref_name, 'test') || github.ref_name == 'dev/workflow' || startsWith(github.ref, 'refs/tags/')  }}
    container: debian:${{ inputs.latest_debian_version }}
    env:
      DEBIAN_VERSION: ${{ inputs.latest_debian_version }}
    steps:
      - name: "Checking out sources."
        uses: actions/checkout@v4

      - name: "Show Environment"
        shell: bash
        run: |
          echo "::notice::Building Debian source package on Debian ${DEBIAN_VERSION}."
          if [[ -f /etc/os-release ]] ; then
            echo -e "\nOS release for building source package:"
            cat /etc/os-release
          fi
          echo -e "\nBash enviroment:"
          env | sort

      - name: 'Adding Debian repo definitions of Frank Brehm'
        uses: fbrehm/github-add-fb-debian-repo@main
        with:
          vendor: Debian
          distro: ${{ inputs.latest_debian_version }}

      - name: "Preparing the Debian container"
        uses: fbrehm/prepare-debian-container@main
        with:
          manage_locales: false

      - name: "Install Debian Python Build Environment"
        uses: ./.github/actions/debian-install-python-buildenv
        with:
          additional_packages: ${{ inputs.additional_debian_build_packages }}

  ###########################
  build_debian_bin:
    runs-on: ubuntu-latest
    needs:
      - define-debian-build-matrix
    name: Building Debian Binary Packages for ${{ matrix.title }}
    if: ${{ github.ref_name == 'main' || github.ref_name == 'master' || startsWith(github.ref_name, 'test') || github.ref_name == 'dev/workflow' || startsWith(github.ref, 'refs/tags/')  }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-debian-build-matrix.outputs.matrix) }}
    container: ${{ matrix.container }}
    env:
      COMPAT: ${{ matrix.compat }}
      DISTRIBUTOR: ${{ matrix.distributor }}
      OS_CODENAME: ${{ matrix.os_codename }}
      OS_RELEASE: ${{ matrix.os_release }}
      OS_TITLE: ${{ matrix.title }}
      VERSION_PREFIX: ${{ matrix.version_prefix }}
    steps:
      - name: "Checking out sources."
        uses: actions/checkout@v4

      - name: "Show Environment"
        shell: bash
        run: |
          echo "::notice::Building Debian binary packages on ${OS_TITLE}."
          if [[ -f /etc/os-release ]] ; then
            echo -e "\nOS release:"
            cat /etc/os-release
          fi
          echo -e "\nBash enviroment:"
          env | sort

      - name: 'Adding Debian repo definitions of Frank Brehm'
        uses: fbrehm/github-add-fb-debian-repo@main
        with:
          vendor: ${{ matrix.distributor }}
          distro: ${{ matrix.os_codename }}

      - name: "Preparing the Debian container"
        uses: fbrehm/prepare-debian-container@main
        with:
          manage_locales: ${{ inputs.has_i18n }}
          additional_locales: ${{ inputs.additional_locales }}


# vim: et tabstop=2 expandtab shiftwidth=2 softtabstop=2 list

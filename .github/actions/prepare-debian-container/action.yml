---
name: Preparing a Debian-like image
author: Frank Brehm
description: Preparing a Debian-like image for doing stuff like Python tests or linting

inputs:
  manage_locales:
    description: Should locales be installed and updated on this image
    required: false
    default: true
  additional_locales:
    description: A whitespace separated list of additional locales (except en_US.UTF-8)
    required: false
    default: 'de_DE.UTF-8'
  install_flit:
    description: 'Install package "flit'"."
    required: false
    type: boolean
    default: false

runs:
  using: "composite"
  steps:
    - name: Update all packages
      id: apt-update
      shell: bash
      run: |
        echo "."
        echo "Apt update ..."
        apt update --yes

        echo "."
        echo "::group::Apt list upgradeable ..."
        apt list --upgradeable
        echo "<-- EOF"
        echo "::endgroup::"

        echo "."
        echo "::group::APT dist-upgrade ..."
        apt dist-upgrade --yes
        echo "::endgroup::"

    - name: 'Install sudo, locales and gettext.'
      id: install-gettext
      shell: bash
      run: |
        echo "."
        echo "::group::APT install sudo"
        apt install --yes sudo
        echo "::endgroup::"

        echo "."
        echo "::group::APT install locales and gettext"
        apt install --yes locales gettext
        echo "::endgroup::"

    - name: Update Locales
      env:
        MANAGE_LOCALES: ${{ inputs.manage_locales }}
        ADDITIONAL_LOCALES: ${{ inputs.additional_locales }}
      id: update-locales
      shell: bash
      run: |
        echo "Update locales."
        echo "::group::Current available locales:"
        locale -a
        echo "<-- EOF"
        echo "::endgroup::"

        echo "."
        echo "Checking /etc/locale.gen ..."
        if test -f /etc/locale.gen; then
            echo "Current /etc/locale.gen:"
            grep -P -v '^\s*(#.*)?$' /etc/locale.gen || true; echo "<-- EOF"
        else
            echo "Creating /etc/locale.gen ..."
            touch /etc/locale.gen
        fi

        echo '.'
        locales_to_install='en_US.UTF-8'

        if [[ "${MANAGE_LOCALES}" == false ]] ; then
            echo "Only en_US.UTF-8 will be installed."
        else
            if [[ -n "${ADDITIONAL_LOCALES}" ]] ; then
                for add_locale in ${ADDITIONAL_LOCALES} ; do
                    if [[ "${add_locale}" == 'en_US.UTF-8' ]] ; then
                        continue
                    fi
                    locales_to_install+=" ${add_locale}"
                done
            fi
        fi
        echo "Locales to install: '${locales_to_instal}'"

        for add_locale in ${locales_to_install} ; do
            echo "Ensuring locale '${add_locale}' ..."
            charset=$( echo "${add_locale}" | sed -e 's/^[^\.]*\.//' )
            if [[ -z "${charset}" ]] ; then
                charset="UTF-8"
            fi
            if grep "${add_locale}" /etc/locale.gen; then
                if grep -P "^\\s*${add_locale}" ; then
                    echo "Locale '${add_locale}' already included."
                else
                    echo "Enabling locale '${add_locale}' ..."
                    sed -i -e "s/#[ 	]*${add_locale}[ 	].*/${add_locale} ${charset}/" /etc/locale.gen
                fi
            else
                echo "Adding locale '${add_locale}' ..."
                echo "${add_locale} ${charset}" >> /etc/locale.gen
            fi
        done

        echo "."
        echo "Managed /etc/locale.gen:"
        grep -P -v '^\s*(#.*)?$' /etc/locale.gen || true; echo "<-- EOF"

        echo "."
        echo "::group::Generating locales ..."
        locale-gen
        echo "::endgroup::"

        echo "."
        echo "::group::New locales:"
        locale -a
        echo "<-- EOF"
        echo "::endgroup::"

    - name: Install and execute lsb-release
      shell: bash
      run: |
        echo "::group::Installing lsb-release"
        apt install --yes lsb-release || true
        echo "::endgroup::"
        echo "LSB-Release:"
        lsb_release -a

    - name: 'Install flit.'
      id: install-flit
      shell: bash
      run: |
        if [[ "${{ inputs.install_flit }}" == true ]] ; then
            echo "::group::Installing flit"
            apt install --yes flit || true
            echo "::endgroup::"
            echo "Version of flit: $( flit --version )"
        else
            echo "Installation of flit is not necessary."
        fi


# vim: et tabstop=2 expandtab shiftwidth=2 softtabstop=2 list
